name: Build Custom PostgreSQL Darwin arm64 Bundle

on:
  push:
    branches: [main]
    tags:
      - 'v*'
  workflow_dispatch:

permissions:
  contents: write

env:
  PG_VERSION: '16.4'
  ARCH: 'arm64'

jobs:
  build:
    name: Build PG Bundle
    runs-on: macos-14

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Build PostgreSQL, PostGIS, and Dependencies
        id: build_postgres
        run: |
          scripts/build-postgres-darwin.sh -v ${{ env.PG_VERSION }} -a ${{ env.ARCH }}
          echo "FILENAME=postgresql-${{ env.PG_VERSION }}-darwin-${{ env.ARCH }}.txz" >> $GITHUB_OUTPUT

      - name: Prepare Release Assets
        run: |
          mkdir -p release
          cp bundle/embedded-postgres-binaries-darwin-${{ env.ARCH }}-${{ env.PG_VERSION }}.0.txz "release/${{ steps.build_postgres.outputs.FILENAME }}"

      - name: Ensure release asset exists
        run: |
          test -f "release/${{ steps.build_postgres.outputs.FILENAME }}"

      - name: Calculate SHA256 Checksums
        id: calculate_sha256
        run: |
          cd release
          echo "SHA256SUMS=$(shasum -a 256 ${{ steps.build_postgres.outputs.FILENAME }} | awk '{print $1}')" >> $GITHUB_OUTPUT

      - name: Get date
        id: get_date
        run: |
          echo "DATE=$(date +%Y%m%d)" >> $GITHUB_OUTPUT

      - name: Create and push git tag if it doesn't exist
        run: |
          tag="v${{ env.PG_VERSION }}-macos-${{ env.ARCH }}-${{ steps.get_date.outputs.DATE }}"
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git fetch --tags
          if ! git rev-parse "$tag" >/dev/null 2>&1; then
            git tag "$tag"
            git push origin "$tag"
          else
            echo "Tag $tag already exists, skipping creation."
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Delete Existing Release
        if: always()
        run: |
          tag="v${{ env.PG_VERSION }}-macos-${{ env.ARCH }}-${{ steps.get_date.outputs.DATE }}"
          release_id=$(gh release view "$tag" --json id -q '.id' 2>/dev/null || echo "")
          if [[ -n "$release_id" ]]; then
            gh release delete "$tag" -y
          fi
        env:
          GH_TOKEN: ${{ github.token }}

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          tag_name: "v${{ env.PG_VERSION }}-macos-${{ env.ARCH }}-${{ steps.get_date.outputs.DATE }}"
          release_name: "${{ env.PG_VERSION }}-macos-${{ env.ARCH }}-${{ steps.get_date.outputs.DATE }}"
          draft: false
          prerelease: false
          body: |
            SHA256 Checksums:
            ```
            ${{ steps.calculate_sha256.outputs.SHA256SUMS }}
            ```

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: release/${{ steps.build_postgres.outputs.FILENAME }}
          asset_name: ${{ steps.build_postgres.outputs.FILENAME }}
          asset_content_type: application/x-tar